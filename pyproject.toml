[build-system]
requires = [
  "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "encapsulated-LTES"
authors = [
  { name = "Ferran Brosa Planella", email = "Ferran.Brosa-Planella@warwick.ac.uk" },
]
description = "A project to simulate encapsulated latent thermal energy storage systems."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
]
dynamic = ["version"]
dependencies = [
  "pybamm[cite]",
  "matplotlib",
  "SciencePlots",
  "jupyter",
]

[project.optional-dependencies]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
  "nox[uv]",
  "pre-commit",
]
docs = [
  "sphinx",
  "pydata_sphinx_theme",
  "sphinx_design",
  "sphinx-copybutton",
  "myst-parser",
  "sphinx-inline-tabs",
  "sphinxcontrib-bibtex",
  "sphinx-autobuild",
  "sphinx-last-updated-by-git",
  "nbsphinx",
  "ipython",
  "sphinx-gallery",
]

[project.urls]
Homepage = "https://github.com/mmsg-warwick/encapsulated-LTES"
"Bug Tracker" = "https://github.com/mmsg-warwick/encapsulated-LTES/issues"
Discussions = "https://github.com/mmsg-warwick/encapsulated-LTES/discussions"
Changelog = "https://github.com/mmsg-warwick/encapsulated-LTES/releases"

[tool.hatch]
envs.default.dependencies = [
  "pybamm",
]
[tool.hatch.version]
path = "src/encapsulated_ltes/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/encapsulated_ltes"]


[tool.coverage]
run.source = ["encapsulated_ltes"]
port.exclude_lines = [
  'pragma: no cover',
]

[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  #"ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  #"RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
src = ["src"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
ignore = [
  "E741",        # Ambiguous variable name
  "E501",        # Line too long
  "PLR0913",     # Too many arguments
  "PLR2004",     # Magic value used in comparison
  "EM101",       # Exception with string literals
  "EM102",       # Exception with string literals
  "T201",        # allow use of print
  "SIM105",      # Simplify comparison
  "C408",        # Unnecessary dict call
]
line-length = 100
exclude = ["__init__.py"]
flake8-unused-arguments.ignore-variadic-names = true

[tool.codespell]
skip = '*.ipynb,*.ts,./src/3rdParty,./src/Test'
count = true
quiet-level = 3
